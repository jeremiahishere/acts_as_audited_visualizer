<div class="content">This is the audit history<br /></div>
<script type="text/paperscript" canvas="visualization_canvas">

  // Create a circle shaped path with its center at the center
  // of the view and a radius of 30:
  var path = new Path.Circle(view.center, 30);
  path.strokeColor = 'black';

  function onResize(event) {
    // Whenever the window is resized, recenter the path:
    path.position = view.center;
  }


  // Create a centered text item at the center of the view:
  var text = new PointText(view.center);
  text.paragraphStyle.justification = 'center';
  text.characterStyle.fontSize = 20;
  text.fillColor = 'blue';

  // Define a random point in the view, which we will be moving
  // the text item towards.
  var destination = Point.random() * view.size;

  function onFrame(event) {
    // Each frame, move the path 1/30th of the difference in position
    // between it and the destination.

    // The vector is the difference between the position of
    // the text item and the destination point:
    var vector = destination - text.position;

    // We add 1/30th of the vector to the position property
    // of the text item, to move it in the direction of the
    // destination point:
    text.position += vector / 30;

    // Set the content of the text item to be the length of the vector.
    // I.e. the distance it has to travel still:
    text.content = Math.round(vector.length);

    // If the distance between the path and the destination is less
    // than 5, we define a new random point in the view to move the
    // path to:
    if (vector.length < 5) {
      destination = Point.random() * view.size;
    }
  }
</script>
<canvas id="visualization_canvas" resize>
</canvas>

<script>
$(document).ready(function()  {
  var last_update_timestamp = 0;

  //update the canvas with an ajax call to the controller
  function update_audits()  {
    timestamp = self.last_update_timestamp
    $.ajax({
      url: "/acts_as_audited_visualizer/update_audits/" + timestamp,
      dataType: "json",
      success: function(json)  {
        self.last_update_timestamp = Number(new Date());
        //add the new data to the content div
        inner_html = $('.content').html();
        inner_html += audit_to_s(json);
        $('.content').html(inner_html);
      }
    });
  }

  //convert input from the ajax call into tags
  function audit_to_s(audit) {
    output = "";
    $.each(audit, function(id, audit_group)  {
      output += "<div id='audit_group_" + id + "' class='audit_group'>";
      $.each(audit_group, function(key, value)  {
        output += "<span id='" + value.model + "-" + value.id + "' class='content_audit'>";
        output += value.model + "<br />" + value.name + "<br />";
        output += "</span>";
      });
      output += "</div>";
    });
    return output
  }

  //update the canvas every few seconds
  function start_updating() {
    setInterval(update_audits, 10000);
  }  

  //get initial canvas
  update_audits();
  setTimeout(start_updating, 2000);
});
</script>
